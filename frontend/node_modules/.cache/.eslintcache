[{"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\index.js":"1","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\App.js":"2","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\Employee\\AddUser.js":"3","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\Employee\\UserList.js":"4","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\Employee\\EditUser.js":"5","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\JobTitle\\JobList.js":"6","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\JobTitle\\AddJob.js":"7","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\JobTitle\\EditJob.js":"8","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\Salary\\AddSalary.js":"9","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\Salary\\SalaryList.js":"10","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\Salary\\EditSalary.js":"11","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\Navbar.js":"12","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\Footer.js":"13"},{"size":240,"mtime":1741058153252,"results":"14","hashOfConfig":"15"},{"size":1686,"mtime":1741602475941,"results":"16","hashOfConfig":"15"},{"size":6064,"mtime":1741602363385,"results":"17","hashOfConfig":"15"},{"size":4576,"mtime":1741602938788,"results":"18","hashOfConfig":"15"},{"size":6192,"mtime":1741602327303,"results":"19","hashOfConfig":"15"},{"size":3034,"mtime":1741602292328,"results":"20","hashOfConfig":"15"},{"size":1297,"mtime":1741602307953,"results":"21","hashOfConfig":"15"},{"size":1774,"mtime":1741602298370,"results":"22","hashOfConfig":"15"},{"size":3089,"mtime":1741602281292,"results":"23","hashOfConfig":"15"},{"size":3532,"mtime":1741603028953,"results":"24","hashOfConfig":"15"},{"size":3586,"mtime":1741603352952,"results":"25","hashOfConfig":"15"},{"size":1141,"mtime":1741605173870,"results":"26","hashOfConfig":"15"},{"size":338,"mtime":1741602572535,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yzk4fv",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\index.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\App.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\Employee\\AddUser.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\Employee\\UserList.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\Employee\\EditUser.js",["69"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst EditUser = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [positions, setPositions] = useState([]);\r\n  const [position_id, setPositionId] = useState(\"\");\r\n  const [salary, setSalary] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n\r\n  const [departments, setDepartments] = useState([]); // Store department list\r\n  const [dep_id, selectDeptID] = useState(\"\"); // Store selected department ID\r\n\r\n  useEffect(() => {\r\n    const selectedPosition = positions.find(\r\n      (pos) => String(pos.id) === String(position_id)\r\n    );\r\n    setSalary(selectedPosition ? selectedPosition.salary : \"\");\r\n  }, [position_id, positions]);\r\n\r\n  useEffect(() => {\r\n    getUserById();\r\n  }, []);\r\n\r\n  const getUserById = async () => {\r\n    const response = await axios.get(`http://localhost:5000/users/${id}`);\r\n    console.log(\"Full API Response:\", response.data.full_name);\r\n    setName(response.data.full_name);\r\n    setEmail(response.data.email);\r\n    setGender(response.data.gender);\r\n    selectDeptID(response.data.job_id);\r\n    setPositionId(response.data.salary_id);\r\n  };\r\n\r\n  // Fetch Positions when Department Changes\r\n  useEffect(() => {\r\n    if (!dep_id) {\r\n      setPositions([]);\r\n      setPositionId(\"\");\r\n      setSalary(\"\");\r\n      return;\r\n    }\r\n\r\n    const fetchPositions = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:5000/salary/getPosition/${dep_id}`\r\n        );\r\n        setPositions(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching positions:\", error);\r\n      }\r\n    };\r\n\r\n    fetchPositions();\r\n  }, [dep_id]);\r\n\r\n  useEffect(() => {\r\n    const fetchDepartments = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/job\");\r\n        setDepartments(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching departments:\", error);\r\n      }\r\n    };\r\n    fetchDepartments();\r\n  }, []);\r\n\r\n  const updateUser = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.patch(`http://localhost:5000/users/${id}`, {\r\n        name,\r\n        email,\r\n        gender,\r\n        position_id,\r\n      });\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"column is-half container\">\r\n        <form onSubmit={updateUser}>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Name</label>\r\n            <div className=\"control\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                placeholder=\"Name\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Email</label>\r\n            <div className=\"control\">\r\n              <input\r\n                type=\"email\"\r\n                className=\"input\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                placeholder=\"Email\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Gender</label>\r\n            <div className=\"control\">\r\n              <div className=\"select is-fullwidth\">\r\n                <select\r\n                  value={gender}\r\n                  onChange={(e) => setGender(e.target.value)}\r\n                >\r\n                  <option value=\"Male\">Male</option>\r\n                  <option value=\"Female\">Female</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* // ----------------------------------------------------------- */}\r\n          <div className=\"field\">\r\n            <label className=\"label\">Job Title</label>\r\n            <div className=\"control\">\r\n              <div className=\"select is-fullwidth\">\r\n                <select\r\n                  value={dep_id}\r\n                  onChange={(e) => selectDeptID(e.target.value)}\r\n                >\r\n                  {departments.map((dep) => (\r\n                    <option key={dep.id} value={dep.id}>\r\n                      {dep.Job_Title}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Position */}\r\n          <div className=\"field\">\r\n            <label className=\"label\">Position</label>\r\n            <div className=\"control\">\r\n              <div className=\"select is-fullwidth\">\r\n                <select\r\n                  value={position_id}\r\n                  onChange={(e) => setPositionId(e.target.value)}\r\n                  required\r\n                >\r\n                  <option value=\"\">Select a position</option>\r\n                  {positions.map((pos) => (\r\n                    <option key={pos.id} value={pos.id}>\r\n                      {pos.position}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Salary */}\r\n          <div className=\"field\">\r\n            <label className=\"label\">Salary</label>\r\n            <div className=\"control\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input\"\r\n                value={\r\n                  salary\r\n                    ? `₱${parseFloat(salary).toLocaleString(\"en-PH\", {\r\n                        minimumFractionDigits: 2,\r\n                      })}`\r\n                    : \"\"\r\n                }\r\n                disabled\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <button type=\"submit\" className=\"button is-success\">\r\n              Update\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditUser;\r\n",["70","71"],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\JobTitle\\JobList.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\JobTitle\\AddJob.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\JobTitle\\EditJob.js",["72"],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\Salary\\AddSalary.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\Salary\\SalaryList.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\Salary\\EditSalary.js",["73"],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\Navbar.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\Footer.js",[],[],{"ruleId":"74","severity":1,"message":"75","line":27,"column":6,"nodeType":"76","endLine":27,"endColumn":8,"suggestions":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"74","severity":1,"message":"82","line":12,"column":6,"nodeType":"76","endLine":12,"endColumn":8,"suggestions":"83"},{"ruleId":"74","severity":1,"message":"84","line":15,"column":6,"nodeType":"76","endLine":15,"endColumn":8,"suggestions":"85"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUserById'. Either include it or remove the dependency array.","ArrayExpression",["86"],"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"React Hook useEffect has a missing dependency: 'getJob'. Either include it or remove the dependency array.",["89"],"React Hook useEffect has a missing dependency: 'getSalary'. Either include it or remove the dependency array.",["90"],{"desc":"91","fix":"92"},"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [getUserById]",{"range":"97","text":"98"},"Update the dependencies array to be: [getJob]",{"range":"99","text":"100"},"Update the dependencies array to be: [getSalary]",{"range":"101","text":"102"},[954,956],"[getUserById]",[325,327],"[getJob]",[475,477],"[getSalary]"]